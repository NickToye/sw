// Buttons
// ---------------------------
// Bootstrap CSS Component

// Base styles
// --------------------------------------------------

.btn {
	display: inline-block;
	margin-bottom: 0; // For input.btn
	font-weight: $btn-font-weight;
	@include transition(all,.3s,linear);
	text: {
		align: center;
		decoration: none;
	}
	font-family: $base-font-family-headings;
	vertical-align: middle;
	cursor: pointer;
	background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
	border: 1px solid transparent;
	white-space: nowrap;
	background: $btn-default-background-color;
	color: $btn-default-color;
	text-transform: uppercase;
	@include button-size(rem($rhythm-unit), rem($rhythm-unit), $p, rem($rhythm-unit), $button-radius);
	@include user-select(none);
	&,
	&:active,
		&.active {
			&:focus {
				@include tab-focus();
			}
		}
	&:hover,
	&:focus {
		color: $btn-default-color;
		text-decoration: none;
	}
	&:active,
	&.active {
		outline: 0;
		background-image: none;
		@include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
	}
	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		cursor: not-allowed;
		pointer-events: none; // Future-proof disabling of clicks
		@include opacity(.65);
		@include box-shadow(none);
	}
	// Font awesome icons
	i.fa {
		padding-right:  rem($rhythm-unit);
	}
	// Contextual buttons
	&--default { @include button-variant($btn-default-color, $btn-default-background-color, $btn-default-border-color); }
	&--primary { @include button-variant($btn-primary-color, $btn-primary-background-color, $btn-primary-border-color, $white);}
	&--secondary { @include button-variant($btn-secondary-color, $btn-secondary-background-color, $btn-secondary-border-color); }
	&--tertiary { @include button-variant($btn-tertiary-color, $btn-tertiary-background-color, $btn-tertiary-border-color); }
	&--dark { @include button-variant($btn-dark-color, $btn-dark-background-color, $btn-dark-border-color); }
	&--success { @include button-variant($btn-success-color, $btn-success-background-color, $btn-success-border-color);}
	&--info { @include button-variant($btn-info-color, $btn-info-background-color, $btn-info-border-color); }
	&--warning { @include button-variant($btn-warning-color, $btn-warning-background-color, $btn-warning-border-color);}
	&--danger { @include button-variant($btn-danger-color, $btn-danger-background-color, $btn-danger-border-color);}
	&--link {
		color: $link-color;
		font-weight: normal;
		cursor: pointer;
		border-radius: 0;
		&,
		&:active,
		&[disabled],
		fieldset[disabled] & {
			background-color: transparent;
			@include box-shadow(none);
		}
		&,
		&:hover,
		&:focus,
		&:active {
			border-color: transparent;
		}
		&:hover,
		&:focus {
			color: $link-hover-color;
			text-decoration: underline;
			background-color: transparent;
		}
		&[disabled],
		fieldset[disabled] & {
			&:hover,
			&:focus {
			color: $btn-link-disabled-color;
			text-decoration: none;
		}
		}
	}
	&--top {

	}
	// Button Sizes
	&--lg {
		@include button-size(rem($large-rhythm-unit), rem($large-rhythm-unit), $font-size-large, rem($large-rhythm-unit), $border-radius-large);
		 i.fa { padding-right: rem($large-rhythm-unit);}
	}
	&--sm {
		@include button-size(rem($small-rhythm-unit), rem($small-rhythm-unit), $font-size-small, rem($small-rhythm-unit), $border-radius-small);
	}
	&--xs {
		@include button-size(rem($extra-small-rhythm-unit), rem($extra-small-rhythm-unit), $font-size-extra-small, rem($small-rhythm-unit), $border-radius-small);
	}
	// Block button
	&--block {
		display: block;
		width: 100%;
		padding-left: 0;
		padding-right: 0;
	}
	// Close button
	&--close {
		padding: 0;
		cursor: pointer;
		background: transparent;
		border: 0;
		@include opacity(.5);
		-webkit-appearance: none;
		&:hover,&:focus {
			@include opacity(.9);
		}
	}
}
// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
	&.btn--block {
		width: 100%;
	}
}
