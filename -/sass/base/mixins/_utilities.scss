// Utilities
// ---------------------------
// Mixin for Utilities

// Clearfix
@mixin clearfix() {
	&:before,
	&:after {
		content: " "; // 1
		display: table; // 2
	}
	&:after {
		clear: both;
	}
}
// inline-block
@mixin inline-block {
	display: inline-block;
	.lt-ie9 & {
		zoom: 1;
		*display: inline;
	}
}
// Resize anything
@mixin resizable($direction) {
	resize: $direction; // Options: horizontal, vertical, both
	overflow: auto; // Safari fix
}
// Image Replacement
@mixin ir() {
	color: transparent;
	font: 0/0 a;
	text-shadow: none;
}
@mixin hide-text() {
	font: #{0/0} a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}
// New mixin to use as of v3.0.1
@mixin text-hide() {
	@include hide-text();
}
// Zero Stuff
@mixin zero {
	margin: 0;
	padding: 0;
	border: 0;
}
@mixin zero-list {
	@include zero;
	list-style: none;
}
@mixin zero-focus {
	outline: 0;
	border: 0;
	@include box-shadow(none);
}
// Baseline Guide
$guide-color: rgba($black,.1);
$guide-background: $body-background-color;
@mixin baseline-guide() {
	background-color: $guide-background;
	@include background-image(linear-gradient($guide-color 1px, transparent 1px));
	background-size: 100% rem($rhythm-unit);
}
// Scaffold
@mixin scaffold($block:outline) {
	background: rgba($white,1);
	color: $black;
	border-radius: $radius;
}
// Sizing shortcuts
@mixin size($width, $height) {
	width: $width;
	height: $height;
}
@mixin square($size) {
	@include size($size, $size);
}
// Contextual backgrounds
// -------------------------
// [converter] $parent hack
@mixin bg-variant($parent, $bg-color, $text-color, $clarity: n) {
	#{$parent} {
		background-color: $bg-color;
		padding: rem($rhythm-unit);
		p { @include zero;}
		@if $clarity == n {
			color: darken($text-color,15%);
		}
		@if $clarity == white {
			color: $white;
		}
		@if $clarity == l1 {
			color: tint($text-color, 10%);
		}
		@if $clarity == l2 {
		background-color: tint($text-color, 25%);
		}
		@if $clarity == l3 {
			color: tint($text-color, 50%);
		}
		@if $clarity == l4 {
			color: tint($text-color, 75%);
		}
		@if $clarity == d1 {
			color: shade($text-color, 10%);
		}
		@if $clarity == d2 {
			color: shade($text-color, 25%);
		}
		@if $clarity == d3 {
			color: shade($text-color, 50%);
		}
		@if $clarity == d4 {
			color: shade($text-color, 75%);
		}
	}
	// Currently not applied as an anchor
	a#{$parent}:hover {
		background-color: darken($bg-color, 10%);
	}
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}